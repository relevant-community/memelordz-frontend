{
  "contractName": "Controller",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "memeMarket",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "poolBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amountTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalCostEth",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "memeMarket",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "poolBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amountTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "returnedEth",
          "type": "uint256"
        }
      ],
      "name": "Sell",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "exponent",
          "type": "uint8"
        },
        {
          "name": "slope",
          "type": "uint32"
        },
        {
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "name": "poolBalance",
          "type": "uint256"
        },
        {
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "priceToMint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "exponent",
          "type": "uint8"
        },
        {
          "name": "slope",
          "type": "uint32"
        },
        {
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "name": "poolBalance",
          "type": "uint256"
        },
        {
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "rewardForBurn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "memeMarket",
          "type": "address"
        },
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "memeMarket",
          "type": "address"
        },
        {
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "hash_function",
          "type": "uint8"
        },
        {
          "name": "size",
          "type": "uint8"
        },
        {
          "name": "_memehash",
          "type": "bytes32"
        },
        {
          "name": "_numTokens",
          "type": "uint256"
        }
      ],
      "name": "initMeme",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506112f0806100206000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a3b7a4614610072578063153e66e6146100e4578063318b8e781461015c5780633a501871146102685780636c197ff5146102da575b600080fd5b34801561007e57600080fd5b506100ce600480360381019080803560ff169060200190929190803563ffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610327565b6040518082815260200191505060405180910390f35b610142600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610363565b604051808215151515815260200191505060405180910390f35b61024e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803560ff169060200190929190803560ff169060200190929190803560001916906020019092919080359060200190929190505050610a22565b604051808215151515815260200191505060405180910390f35b34801561027457600080fd5b506102c4600480360381019080803560ff169060200190929190803563ffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610a49565b6040518082815260200191505060405180910390f35b3480156102e657600080fd5b50610325600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a85565b005b60006103588361034a8888610345878a61123690919063ffffffff16565b611252565b61129590919063ffffffff16565b905095945050505050565b6000806000806000806000803496508a73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b505050506040513d602081101561040057600080fd5b810190808051906020019092919050505095508a73ffffffffffffffffffffffffffffffffffffffff166396365d446040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506040513d60208110156104a157600080fd5b810190808051906020019092919050505094508a73ffffffffffffffffffffffffffffffffffffffff166352f6ee586040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b505050506040513d602081101561054257600080fd5b810190808051906020019092919050505093508a73ffffffffffffffffffffffffffffffffffffffff166383caf2756040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156105b957600080fd5b505af11580156105cd573d6000803e3d6000fd5b505050506040513d60208110156105e357600080fd5b81019080805190602001909291905050509250610603848488888d610327565b915081341015151561061457600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff166340c10f198b8b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b505050506040513d60208110156106e157600080fd5b810190808051906020019092919050505015156106fd57600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff166354dfcab661072c848861123690919063ffffffff16565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561077e57600080fd5b505af1158015610792573d6000803e3d6000fd5b5050505081871115610810576107b1828861129590919063ffffffff16565b90508973ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156107f9573d6000803e3d6000fd5b5061080d818861129590919063ffffffff16565b96505b8a73ffffffffffffffffffffffffffffffffffffffff166108fc889081150290604051600060405180830381858888f19350505050158015610856573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f75a85e7be0265abefef113ee168a0d751385a985c3a37920ae97ae192d2eadb48d73ffffffffffffffffffffffffffffffffffffffff166396365d446040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561090a57600080fd5b505af115801561091e573d6000803e3d6000fd5b505050506040513d602081101561093457600080fd5b81019080805190602001909291905050508e73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156109a957600080fd5b505af11580156109bd573d6000803e3d6000fd5b505050506040513d60208110156109d357600080fd5b81019080805190602001909291905050508d876040518085815260200184815260200183815260200182815260200194505050505060405180910390a360019750505050505050509392505050565b6000610a2f338984610363565b1515610a3a57600080fd5b60019050979650505050505050565b6000610a7a610a6b8787610a66868961129590919063ffffffff16565b611252565b8461129590919063ffffffff16565b905095945050505050565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610b2957600080fd5b505af1158015610b3d573d6000803e3d6000fd5b505050506040513d6020811015610b5357600080fd5b81019080805190602001909291905050509550868610151515610b7557600080fd5b8773ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b505050506040513d6020811015610c0357600080fd5b810190808051906020019092919050505094508773ffffffffffffffffffffffffffffffffffffffff166396365d446040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c7a57600080fd5b505af1158015610c8e573d6000803e3d6000fd5b505050506040513d6020811015610ca457600080fd5b810190808051906020019092919050505093508773ffffffffffffffffffffffffffffffffffffffff166352f6ee586040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b505050506040513d6020811015610d4557600080fd5b810190808051906020019092919050505092508773ffffffffffffffffffffffffffffffffffffffff166383caf2756040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610dbc57600080fd5b505af1158015610dd0573d6000803e3d6000fd5b505050506040513d6020811015610de657600080fd5b81019080805190602001909291905050509150610e06838387878b610a49565b90508773ffffffffffffffffffffffffffffffffffffffff16639dc29fac33896040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610eab57600080fd5b505af1158015610ebf573d6000803e3d6000fd5b505050506040513d6020811015610ed557600080fd5b81019080805190602001909291905050501515610ef157600080fd5b8773ffffffffffffffffffffffffffffffffffffffff166354dfcab6610f20838761129590919063ffffffff16565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610f7257600080fd5b505af1158015610f86573d6000803e3d6000fd5b505050508773ffffffffffffffffffffffffffffffffffffffff166349dcbc5e33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561102d57600080fd5b505af1158015611041573d6000803e3d6000fd5b505050506040513d602081101561105757600080fd5b8101908080519060200190929190505050151561107357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f4f4be38a8508fd47fad5f6d8d4dc1753a805beb3ce3f769802abc4d2165a6d8a8a73ffffffffffffffffffffffffffffffffffffffff166396365d446040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561112657600080fd5b505af115801561113a573d6000803e3d6000fd5b505050506040513d602081101561115057600080fd5b81019080805190602001909291905050508b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111c557600080fd5b505af11580156111d9573d6000803e3d6000fd5b505050506040513d60208110156111ef57600080fd5b81019080805190602001909291905050508b866040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050505050565b6000818301905082811015151561124957fe5b80905092915050565b6000806001850160ff16905061128b8463ffffffff1661127d8384870a6112ae90919063ffffffff16565b6112ae90919063ffffffff16565b9150509392505050565b60008282111515156112a357fe5b818303905092915050565b600081838115156112bb57fe5b049050929150505600a165627a7a72305820c900b5605e7d27c8155c7fab7cf1f6714534f56bd369cb7ada00cd4837734b3c0029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a3b7a4614610072578063153e66e6146100e4578063318b8e781461015c5780633a501871146102685780636c197ff5146102da575b600080fd5b34801561007e57600080fd5b506100ce600480360381019080803560ff169060200190929190803563ffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610327565b6040518082815260200191505060405180910390f35b610142600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610363565b604051808215151515815260200191505060405180910390f35b61024e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803560ff169060200190929190803560ff169060200190929190803560001916906020019092919080359060200190929190505050610a22565b604051808215151515815260200191505060405180910390f35b34801561027457600080fd5b506102c4600480360381019080803560ff169060200190929190803563ffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610a49565b6040518082815260200191505060405180910390f35b3480156102e657600080fd5b50610325600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a85565b005b60006103588361034a8888610345878a61123690919063ffffffff16565b611252565b61129590919063ffffffff16565b905095945050505050565b6000806000806000806000803496508a73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b505050506040513d602081101561040057600080fd5b810190808051906020019092919050505095508a73ffffffffffffffffffffffffffffffffffffffff166396365d446040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506040513d60208110156104a157600080fd5b810190808051906020019092919050505094508a73ffffffffffffffffffffffffffffffffffffffff166352f6ee586040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b505050506040513d602081101561054257600080fd5b810190808051906020019092919050505093508a73ffffffffffffffffffffffffffffffffffffffff166383caf2756040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156105b957600080fd5b505af11580156105cd573d6000803e3d6000fd5b505050506040513d60208110156105e357600080fd5b81019080805190602001909291905050509250610603848488888d610327565b915081341015151561061457600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff166340c10f198b8b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b505050506040513d60208110156106e157600080fd5b810190808051906020019092919050505015156106fd57600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff166354dfcab661072c848861123690919063ffffffff16565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561077e57600080fd5b505af1158015610792573d6000803e3d6000fd5b5050505081871115610810576107b1828861129590919063ffffffff16565b90508973ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156107f9573d6000803e3d6000fd5b5061080d818861129590919063ffffffff16565b96505b8a73ffffffffffffffffffffffffffffffffffffffff166108fc889081150290604051600060405180830381858888f19350505050158015610856573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f75a85e7be0265abefef113ee168a0d751385a985c3a37920ae97ae192d2eadb48d73ffffffffffffffffffffffffffffffffffffffff166396365d446040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561090a57600080fd5b505af115801561091e573d6000803e3d6000fd5b505050506040513d602081101561093457600080fd5b81019080805190602001909291905050508e73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156109a957600080fd5b505af11580156109bd573d6000803e3d6000fd5b505050506040513d60208110156109d357600080fd5b81019080805190602001909291905050508d876040518085815260200184815260200183815260200182815260200194505050505060405180910390a360019750505050505050509392505050565b6000610a2f338984610363565b1515610a3a57600080fd5b60019050979650505050505050565b6000610a7a610a6b8787610a66868961129590919063ffffffff16565b611252565b8461129590919063ffffffff16565b905095945050505050565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610b2957600080fd5b505af1158015610b3d573d6000803e3d6000fd5b505050506040513d6020811015610b5357600080fd5b81019080805190602001909291905050509550868610151515610b7557600080fd5b8773ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b505050506040513d6020811015610c0357600080fd5b810190808051906020019092919050505094508773ffffffffffffffffffffffffffffffffffffffff166396365d446040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c7a57600080fd5b505af1158015610c8e573d6000803e3d6000fd5b505050506040513d6020811015610ca457600080fd5b810190808051906020019092919050505093508773ffffffffffffffffffffffffffffffffffffffff166352f6ee586040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b505050506040513d6020811015610d4557600080fd5b810190808051906020019092919050505092508773ffffffffffffffffffffffffffffffffffffffff166383caf2756040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610dbc57600080fd5b505af1158015610dd0573d6000803e3d6000fd5b505050506040513d6020811015610de657600080fd5b81019080805190602001909291905050509150610e06838387878b610a49565b90508773ffffffffffffffffffffffffffffffffffffffff16639dc29fac33896040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610eab57600080fd5b505af1158015610ebf573d6000803e3d6000fd5b505050506040513d6020811015610ed557600080fd5b81019080805190602001909291905050501515610ef157600080fd5b8773ffffffffffffffffffffffffffffffffffffffff166354dfcab6610f20838761129590919063ffffffff16565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610f7257600080fd5b505af1158015610f86573d6000803e3d6000fd5b505050508773ffffffffffffffffffffffffffffffffffffffff166349dcbc5e33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561102d57600080fd5b505af1158015611041573d6000803e3d6000fd5b505050506040513d602081101561105757600080fd5b8101908080519060200190929190505050151561107357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f4f4be38a8508fd47fad5f6d8d4dc1753a805beb3ce3f769802abc4d2165a6d8a8a73ffffffffffffffffffffffffffffffffffffffff166396365d446040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561112657600080fd5b505af115801561113a573d6000803e3d6000fd5b505050506040513d602081101561115057600080fd5b81019080805190602001909291905050508b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111c557600080fd5b505af11580156111d9573d6000803e3d6000fd5b505050506040513d60208110156111ef57600080fd5b81019080805190602001909291905050508b866040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050505050565b6000818301905082811015151561124957fe5b80905092915050565b6000806001850160ff16905061128b8463ffffffff1661127d8384870a6112ae90919063ffffffff16565b6112ae90919063ffffffff16565b9150509392505050565b60008282111515156112a357fe5b818303905092915050565b600081838115156112bb57fe5b049050929150505600a165627a7a72305820c900b5605e7d27c8155c7fab7cf1f6714534f56bd369cb7ada00cd4837734b3c0029",
  "sourceMap": "112:3604:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;112:3604:0;;;;;;;",
  "deployedSourceMap": "112:3604:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:278;;8:9:-1;5:2;;;30:1;27;20:12;5:2;688:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1418:1032;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:271;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:280;;8:9:-1;5:2;;;30:1;27;20:12;5:2;974:280:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2578:861;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2578:861:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:278;856:7;882:75;945:11;882:58;896:8;906:5;913:26;929:9;913:11;:15;;:26;;;;:::i;:::-;882:13;:58::i;:::-;:62;;:75;;;;:::i;:::-;875:82;;688:278;;;;;;;:::o;1418:1032::-;1510:4;1521:17;1556:19;1620;1684:14;1740:12;1792:22;2109:20;1541:9;1521:29;;1589:10;1578:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1578:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1578:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1578:36:0;;;;;;;;;;;;;;;;1556:58;;1653:10;1642:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1642:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1642:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1642:36:0;;;;;;;;;;;;;;;;1620:58;;1712:10;1701:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1701:33:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1701:33:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1701:33:0;;;;;;;;;;;;;;;;1684:50;;1766:10;1755:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1755:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1755:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1755:30:0;;;;;;;;;;;;;;;;1740:45;;1817:65;1829:8;1839:5;1846:11;1859;1872:9;1817:11;:65::i;:::-;1792:90;;1909:14;1896:9;:27;;1888:36;;;;;;;;1950:10;1939:27;;;1967:6;1975:9;1939:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1939:46:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1939:46:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1939:46:0;;;;;;;;;;;;;;;;1931:55;;;;;;;;2003:10;1992:37;;;2030:31;2046:14;2030:11;:15;;:31;;;;:::i;:::-;1992:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1992:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1992:70:0;;;;2085:14;2073:9;:26;2069:183;;;2132:29;2146:14;2132:9;:13;;:29;;;;:::i;:::-;2109:52;;2169:6;:15;;:29;2185:12;2169:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2169:29:0;2218:27;2232:12;2218:9;:13;;:27;;;;:::i;:::-;2206:39;;2069:183;2257:10;:19;;:30;2277:9;2257:30;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2257:30:0;2314:10;2298:130;;2302:10;2298:130;;;2337:10;2326:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2326:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2326:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2326:36:0;;;;;;;;;;;;;;;;2375:10;2364:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2364:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2364:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2364:36:0;;;;;;;;;;;;;;;;2402:9;2413:14;2298:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:4;2434:11;;1418:1032;;;;;;;;;;;;:::o;3443:271::-;3632:4;3654:35;3658:10;3670:6;3678:10;3654:3;:35::i;:::-;3646:44;;;;;;;;3705:4;3698:11;;3443:271;;;;;;;;;:::o;974:280::-;1144:7;1170:75;1186:58;1200:8;1210:5;1217:26;1233:9;1217:11;:15;;:26;;;;:::i;:::-;1186:13;:58::i;:::-;1170:11;:15;;:75;;;;:::i;:::-;1163:82;;974:280;;;;;;;:::o;2578:861::-;2644:21;2760:19;2824;2888:14;2944:12;2996:19;2679:10;2668:32;;;2701:10;2668:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2668:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2668:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2668:44:0;;;;;;;;;;;;;;;;2644:68;;2743:9;2726:13;:26;;2718:35;;;;;;;;2793:10;2782:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2782:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2782:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2782:36:0;;;;;;;;;;;;;;;;2760:58;;2857:10;2846:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2846:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2846:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2846:36:0;;;;;;;;;;;;;;;;2824:58;;2916:10;2905:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2905:33:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2905:33:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2905:33:0;;;;;;;;;;;;;;;;2888:50;;2970:10;2959:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2959:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2959:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2959:30:0;;;;;;;;;;;;;;;;2944:45;;3018:67;3032:8;3042:5;3049:11;3062;3075:9;3018:13;:67::i;:::-;2996:89;;3111:10;3100:27;;;3128:10;3140:9;3100:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3100:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3100:50:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3100:50:0;;;;;;;;;;;;;;;;3092:59;;;;;;;;3168:10;3157:37;;;3195:28;3211:11;3195;:15;;:28;;;;:::i;:::-;3157:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3157:67:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3157:67:0;;;;3249:10;3238:30;;;3269:10;3281:11;3238:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3238:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3238:55:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3238:55:0;;;;;;;;;;;;;;;;3230:64;;;;;;;;3323:10;3306:128;;3311:10;3306:128;;;3346:10;3335:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3335:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3335:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3335:36:0;;;;;;;;;;;;;;;;3384:10;3373:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:36:0;;;;;;;;;;;;;;;;3411:9;3422:11;3306:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2578:861;;;;;;;;:::o;1238:128:8:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;484:196:0:-;571:7;590:12;616:1;605:8;:12;590:27;;;;634:37;665:5;634:37;;:26;655:4;645;635:6;:14;634:20;;:26;;;;:::i;:::-;:30;;:37;;;;:::i;:::-;627:44;;484:196;;;;;;:::o;1060:116:8:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;665:283::-;725:7;941:2;936;:7;;;;;;;;929:14;;665:283;;;;:::o",
  "source": "import \"./ControllerI.sol\";\nimport \"./ERC20MainI.sol\";\nimport \"zeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract Controller is ControllerI {\n\n    using SafeMath for uint256;\n\n    event Buy(address indexed memeMarket, address indexed to, uint256 poolBalance, uint tokenSupply, uint256 amountTokens, uint256 totalCostEth);\n    event Sell(address indexed memeMarket, address indexed from, uint256 poolBalance, uint tokenSupply, uint256 amountTokens, uint256 returnedEth);\n\n      function curveIntegral(uint8 exponent, uint32 slope, uint256 tokens) internal returns (uint256) {\n        uint256 nexp = exponent + 1;\n        return (tokens ** nexp).div(nexp).div(slope);\n      }\n\n      function priceToMint(\n        uint8 exponent,\n        uint32 slope,\n        uint256 totalSupply,\n        uint256 poolBalance,\n        uint256 numTokens) public returns(uint256) {\n        return curveIntegral(exponent, slope, totalSupply.add(numTokens)).sub(poolBalance);\n      }\n\n      function rewardForBurn(\n        uint8 exponent,\n        uint32 slope,\n        uint256 totalSupply,\n        uint256 poolBalance,\n        uint256 numTokens) public returns(uint256) {\n        return poolBalance.sub(curveIntegral(exponent, slope, totalSupply.sub(numTokens)));\n      }\n\n\n  /// @dev                Mint new tokens with ether\n  /// @param memeMarket   the marketplace\n  /// @param numTokens    The number of tokens you want to mint\n  function buy(address memeMarket, address sender, uint256 numTokens) public payable returns (bool){\n    uint256 sentEther = msg.value;\n    uint256 totalSupply = ERC20MainI(memeMarket).totalSupply();\n    uint256 poolBalance = ERC20MainI(memeMarket).poolBalance();\n    uint8 exponent = ERC20MainI(memeMarket).exponent();\n    uint32 slope = ERC20MainI(memeMarket).slope();\n\n    uint256 priceForTokens = priceToMint(exponent, slope, totalSupply, poolBalance, numTokens);\n    require(msg.value >= priceForTokens);\n\n    require(ERC20MainI(memeMarket).mint(sender, numTokens));\n    ERC20MainI(memeMarket).setPoolBalance(poolBalance.add(priceForTokens));\n\n    if (sentEther > priceForTokens) {\n      uint256 refundAmount = sentEther.sub(priceForTokens);\n      sender.transfer(refundAmount);\n      sentEther = sentEther.sub(refundAmount);\n    }\n    memeMarket.transfer(sentEther);\n    emit Buy(memeMarket, msg.sender, ERC20MainI(memeMarket).poolBalance(), ERC20MainI(memeMarket).totalSupply(), numTokens, priceForTokens);\n    return true;\n  }\n\n  /// @dev                Burn tokens to receive ether\n  /// @param numTokens    The number of tokens that you want to burn\n  function sell(address memeMarket, uint256 numTokens) public {\n    uint256 senderBalance = ERC20MainI(memeMarket).balanceOf(msg.sender);\n    require(senderBalance >= numTokens);\n\n    uint256 totalSupply = ERC20MainI(memeMarket).totalSupply();\n    uint256 poolBalance = ERC20MainI(memeMarket).poolBalance();\n    uint8 exponent = ERC20MainI(memeMarket).exponent();\n    uint32 slope = ERC20MainI(memeMarket).slope();\n\n    uint256 ethToReturn = rewardForBurn(exponent, slope, totalSupply, poolBalance, numTokens);\n\n    require(ERC20MainI(memeMarket).burn(msg.sender, numTokens));\n    ERC20MainI(memeMarket).setPoolBalance(poolBalance.sub(ethToReturn));\n    require(ERC20MainI(memeMarket).sendEth(msg.sender, ethToReturn));\n\n    emit Sell(memeMarket, msg.sender, ERC20MainI(memeMarket).poolBalance(), ERC20MainI(memeMarket).totalSupply(), numTokens, ethToReturn);\n  }\n\n  function initMeme(\n    address sender,\n    string _name,\n    string _symbol,\n    uint8 hash_function,\n    uint8 size,\n    bytes32 _memehash,\n    uint256 _numTokens) public payable returns (bool) {\n      require(buy(msg.sender, sender, _numTokens));\n      return true;\n  }\n}\n",
  "sourcePath": "/media/000/Documents/meme-lordz/contracts/Controller.sol",
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5d893649fce2fdf96ecd23d60755d40b91390f81",
      "transactionHash": "0xcdadc58c3e5396e35a89c0b8aaf1ada44858e3762ae88d85f7836b7b9391fd9e"
    },

    "9000": {
      "events": {},
      "links": {},
      "address": "0xde8acd5a5ee09f20a6ecd0b7cce1538a12fd9af6"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-08T14:43:14.699Z"
}
